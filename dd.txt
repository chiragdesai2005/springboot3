<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.6.0</spring-boot.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.8</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<image>
						<builder>paketobuildpacks/builder:jdk11</builder>
					</image>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>


package com.example.demo;

import org.example.demo.Response;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.UUID;

@RestController
public class MyController {

    @PostMapping("/api/data")
    public Response postData(@RequestBody com.example.demo.Request requestBody) {
        Response responseBody = new Response();

        int maxLimit = 5000;
        int limit = (requestBody.getPageFilter() != null && requestBody.getPageFilter().getLimit() > 0) ?
                Math.min(requestBody.getPageFilter().getLimit(), maxLimit) : maxLimit;

        int offset = (requestBody.getPageFilter() != null) ? requestBody.getPageFilter().getOffset() : 0;

        // Generate random size of result data (e.g., 40000)
        int dataSize = 40000;

        // If limit is not defined, return the first 5000 records with offset 0
        if (limit <= 0) {
            limit = maxLimit;
            dataSize = Math.min(dataSize, limit); // Ensure dataSize doesn't exceed limit
            offset = 0;
        }

        // Set offset
        responseBody.setOffset(offset);

        // If offset is greater than or equal to 10, set moreRowsExist to false and return
        if (offset >= 10) {
            responseBody.setMoreRowsExist(false);
            responseBody.setLimit(0); // Set limit to 0 when moreRowsExist is false
            return responseBody;
        }

        // Set limit
        responseBody.setLimit(limit);

        // Determine the actual number of records to return
        int recordsToReturn = Math.min(dataSize - offset, limit);

        // Logic to generate data
        List<Data> dataList = generateData(recordsToReturn);

        responseBody.setData(dataList);

        // Check if more rows exist
        if (offset + limit < dataSize) {
            responseBody.setMoreRowsExist(true);
        } else {
            responseBody.setMoreRowsExist(false);
        }

        return responseBody;
    }

    private List<Data> generateData(int numRecords) {
        List<Data> dataList = new ArrayList<>();
        Random random = new Random();
        for (int i = 0; i < numRecords; i++) {
            String uuid = UUID.randomUUID().toString();
            Data data = new Data();
            data.setRemovedCustomerCif("000XXXGV" + i + "S8.600");
            data.setRemovedCustomerUuid(uuid);
            data.setRemovedDateTime("2023-01-0" + i + "T00:00:00");
            data.setRemovedReason("Reason-" + i);
            dataList.add(data);
        }
        return dataList;
    }




}


public class Request {

    private String fromDate;
    private String toDate;
    private PageFilter pageFilter;

    public String getFromDate() {
        return fromDate;
    }

    public void setFromDate(String fromDate) {
        this.fromDate = fromDate;
    }

    public String getToDate() {
        return toDate;
    }

    public void setToDate(String toDate) {
        this.toDate = toDate;
    }

    public PageFilter getPageFilter() {
        return pageFilter;
    }

    public void setPageFilter(PageFilter pageFilter) {
        this.pageFilter = pageFilter;
    }

}





import java.util.List;

public class Response {
    private int offset;
    private int limit;
    private boolean moreRowsExist;
    private List<Data> data;

    public int getOffset() {
        return offset;
    }

    public void setOffset(int offset) {
        this.offset = offset;
    }

    public int getLimit() {
        return limit;
    }

    public void setLimit(int limit) {
        this.limit = limit;
    }

    public boolean isMoreRowsExist() {
        return moreRowsExist;
    }

    public void setMoreRowsExist(boolean moreRowsExist) {
        this.moreRowsExist = moreRowsExist;
    }

    public List<Data> getData() {
        return data;
    }

    public void setData(List<Data> data) {
        this.data = data;
    }
}

public class PageFilter {

    private int offset;
    private int limit;

    public int getLimit() {
        return limit;
    }

    public void setLimit(int limit) {
        this.limit = limit;
    }

    public int getOffset() {
        return offset;
    }

    public void setOffset(int offset) {
        this.offset = offset;
    }
}


package com.example.demo;

import java.util.List;

public class Data {

    private String removedCustomerCif;
    private String removedCustomerUuid;
    private String removedDateTime;
    private String removedReason;

    private List<CombinedHistory> combinedHistory;

    public String getRemovedCustomerCif() {
        return removedCustomerCif;
    }

    public void setRemovedCustomerCif(String removedCustomerCif) {
        this.removedCustomerCif = removedCustomerCif;
    }

    public String getRemovedCustomerUuid() {
        return removedCustomerUuid;
    }

    public void setRemovedCustomerUuid(String removedCustomerUuid) {
        this.removedCustomerUuid = removedCustomerUuid;
    }

    public String getRemovedDateTime() {
        return removedDateTime;
    }

    public void setRemovedDateTime(String removedDateTime) {
        this.removedDateTime = removedDateTime;
    }

    public String getRemovedReason() {
        return removedReason;
    }

    public void setRemovedReason(String removedReason) {
        this.removedReason = removedReason;
    }

    public List<CombinedHistory> getCombinedHistory() {
        return combinedHistory;
    }

    public void setCombinedHistory(List<CombinedHistory> combinedHistory) {
        this.combinedHistory = combinedHistory;
    }
}


package com.example.demo;

public class CombinedHistory {

    private String combinedCustomerCif;
    private String combinedDateTime;

    public String getCombinedCustomerCif() {
        return combinedCustomerCif;
    }

    public void setCombinedCustomerCif(String combinedCustomerCif) {
        this.combinedCustomerCif = combinedCustomerCif;
    }

    public String getCombinedDateTime() {
        return combinedDateTime;
    }

    public void setCombinedDateTime(String combinedDateTime) {
        this.combinedDateTime = combinedDateTime;
    }
}


package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

}
